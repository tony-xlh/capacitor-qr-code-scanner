{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","torchOn","a","showMessage","showControlAndhideBackground","DBR","scan","result","hideControlAndRevealBackground","barcodeFormat","barcodeText","alert","message","document","getElementById","style","display","getElementsByClassName","Capacitor","isNativePlatform","Toast","show","text","desiredState","toggleTorch","stopScan","className","src","logo","alt","id","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"mQAAe,MAA0B,iC,2CCwF1BA,MAjFf,WACE,IAAIC,GAAU,EADD,4CAEb,4BAAAC,EAAA,6DACEC,EAAY,YADd,SAGmB,4GACfC,IAJJ,SAKuBC,IAAIC,KAAK,CAAC,SAFd,8GAHnB,OAKQC,EALR,OAMIC,IAEAL,EADcI,EAAOE,cAAc,KAAKF,EAAOG,aAPnD,kDAUIC,MAAM,KAAEC,SAVZ,2DAFa,sBAgBb,SAASR,IACPS,SAASC,eAAe,oBAAoBC,MAAMC,QAAQ,UAC1DH,SAASI,uBAAuB,cAAc,GAAGF,MAAMC,QAAQ,OAIjE,SAASR,IAEPK,SAASI,uBAAuB,cAAc,GAAGF,MAAMC,QAAQ,OAC/DH,SAASC,eAAe,oBAAoBC,MAAMC,QAAQ,OAzB/C,SA4BEb,EA5BF,8EA4Bb,WAA2BS,GAA3B,SAAAV,EAAA,0DACMgB,IAAUC,mBADhB,gCAEUC,IAAMC,KAAK,CACfC,KAAMV,IAHZ,6BAOID,MAAMC,GAPV,4CA5Ba,kEAuCb,4BAAAV,EAAA,sEAEQqB,GAAe,EACftB,IACFsB,GAAe,GAJrB,SAMUlB,IAAImB,YAAY,CAAC,GAAKD,IANhC,OAOItB,EAAUsB,EAPd,gDASIZ,MAAM,KAAEC,SATZ,0DAvCa,kEAoDb,sBAAAV,EAAA,+EAEUG,IAAIoB,WAFd,OAGIjB,IAHJ,+CAKIG,MAAM,KAAEC,SALZ,yDApDa,sBA6Db,OACE,sBAAKc,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,wBAAQC,GAAG,OAAOC,QAjEX,2CAiEP,+BAIF,sBAAKD,GAAG,mBAAR,UACE,wBAAQJ,UAAU,8BAA8BK,QAtEzC,2CAsEP,0BAGA,wBAAQL,UAAU,wBAAwBK,QAzEnC,2CAyEP,0BCpEOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9B,SAASC,eAAe,SAM1BkB,M","file":"static/js/main.6d71aa62.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport './Scanner.css';\nimport { DBR } from 'capacitor-plugin-dynamsoft-barcode-reader';\nimport { Toast } from '@capacitor/toast';\nimport { Capacitor } from '@capacitor/core';\n\nfunction App() {\n  var torchOn = false;\n  async function scan() {\n    showMessage(\"Starting\")\n    try{\n      var template = \"{\\\"ImageParameter\\\":{\\\"BarcodeFormatIds\\\":[\\\"BF_QR_CODE\\\"],\\\"Description\\\":\\\"\\\",\\\"Name\\\":\\\"Settings\\\"},\\\"Version\\\":\\\"3.0\\\"}\";\n      showControlAndhideBackground();\n      var result = await DBR.scan({\"template\":template});\n      hideControlAndRevealBackground();\n      let message = result.barcodeFormat+\": \"+result.barcodeText;\n      showMessage(message)\n    }catch(e){\n      alert(e.message);\n    }\n  }\n\n  function showControlAndhideBackground(){\n    document.getElementById(\"controlContainer\").style.display=\"inherit\";\n    document.getElementsByClassName(\"App-header\")[0].style.display=\"none\";\n    //document.getElementsByClassName(\"App-header\")[0].style.backgroundColor=\"transparent\";\n  }\n\n  function hideControlAndRevealBackground(){\n    //document.getElementsByClassName(\"App-header\")[0].style.backgroundColor=\"#282c34\";\n    document.getElementsByClassName(\"App-header\")[0].style.display=\"flex\";\n    document.getElementById(\"controlContainer\").style.display=\"none\";\n  }\n  \n  async function showMessage(message){\n    if (Capacitor.isNativePlatform()){\n      await Toast.show({\n        text: message\n      });\n    }    \n    else{\n      alert(message);\n    }\n  }\n\n  async function toggleTorch(){\n    try{\n      let desiredState = true;\n      if (torchOn){\n        desiredState = false;\n      }\n      await DBR.toggleTorch({\"on\":desiredState});\n      torchOn = desiredState;\n    }catch(e){\n      alert(e.message);\n    }\n  }\n\n  async function stopScan(){\n    try{\n      await DBR.stopScan();\n      hideControlAndRevealBackground();\n    }catch(e){\n      alert(e.message);\n    }\n  }\n    \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <button id=\"scan\" onClick={scan}>\n            Start Scanning\n        </button>\n      </header>\n      <div id=\"controlContainer\">\n        <button className=\"scanner-control toggleTorch\" onClick={toggleTorch}>\n            Toggle Torch\n        </button>\n        <button className=\"scanner-control close\" onClick={stopScan}>\n            Close\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}